version: '3.8'

services:
  n8n:
    container_name: n8n
    restart: unless-stopped
    image: n8nio/n8n:1.90.0
    networks: ['ai_network']
    ports:
        - 5678:5678
        # - 443:443
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_PORT=5678
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY
      - N8N_USER_MANAGEMENT_JWT_SECRET
      - GENERIC_TIMEZONE
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    volumes:
      - n8n_data:/home/node/.n8n
      - ./shared:/data/shared
    env_file:
      - .env

  postgres:
    image: postgres:13.19-alpine
    hostname: postgres
    networks: ['ai_network']
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    env_file:
      - .env

  qdrant:
    image: qdrant/qdrant:v1.14.1
    hostname: qdrant
    container_name: qdrant
    networks: ['ai_network']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_data:/qdrant/storage

  webserver:
    image: webserver/serene:latest
    hostname: webserver
    container_name: webserver
    networks: ['ai_network']
    ports:
      - "80:80"
    restart: unless-stopped


volumes:
  n8n_data:
  qdrant_data:
  postgres_data:

networks:
  ai_network: